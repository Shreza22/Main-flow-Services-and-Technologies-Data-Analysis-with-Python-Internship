# List: Adding and Removing Elements
print("===== LIST ADD AND REMOVE =====")
my_list = [10, 20, 30, 40, 50]
print("Original List:", my_list)

# Adding an element at the end of the list
my_list.append(60)
print("After Appending 60:", my_list)

# Adding an element at a specific position
my_list.insert(2, 25)  # Insert 25 at index 2
print("After Inserting 25 at Index 2:", my_list)

# Removing an element by value
my_list.remove(30)
print("After Removing 30:", my_list)

# Removing the last element using pop()
popped_element = my_list.pop()
print("After Popping the Last Element:", my_list)
print("Popped Element:", popped_element)

# Removing an element by index
del my_list[1]  # Remove the element at index 1
print("After Removing Element at Index 1:", my_list)


# Dictionary: Adding and Removing Key-Value Pairs
print("\n===== DICTIONARY ADD AND REMOVE =====")
my_dict = {'name': 'Alice', 'age': 25, 'city': 'New York'}
print("Original Dictionary:", my_dict)

# Adding a new key-value pair
my_dict['job'] = 'Engineer'
print("After Adding 'job': 'Engineer':", my_dict)

# Removing a key-value pair by key
del my_dict['city']
print("After Removing 'city':", my_dict)

# Removing a key-value pair using pop()
age = my_dict.pop('age')
print(f"After Popping 'age': {age}")
print("Dictionary after Popping 'age':", my_dict)


# Set: Adding and Removing Elements
print("\n===== SET ADD AND REMOVE =====")
my_set = {10, 20, 30, 40, 50}
print("Original Set:", my_set)

# Adding an element to the set
my_set.add(60)
print("After Adding 60:", my_set)

# Adding multiple elements at once
my_set.update([70, 80])
print("After Adding 70 and 80:", my_set)

# Removing an element from the set
my_set.remove(30)
print("After Removing 30:", my_set)

# Using discard to remove an element that might not exist
my_set.discard(100)  # This will not raise an error even if 100 is not in the set
print("After Discarding 100 (no error if not present):", my_set)

# Removing a random element using pop()
popped_element = my_set.pop()
print("After Popping a Random Element:", my_set)
print("Popped Element:", popped_element)
